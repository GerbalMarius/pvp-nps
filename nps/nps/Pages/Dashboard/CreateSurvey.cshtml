@page
@using System.Text
@using System.Text.Json
@using nps.Models.SurveyQuestions
@model CreateSurvey

@{
    Layout = "Shared/_VerticalLayout";
    ViewData["Title"] = "Survey create";
}
<h1 class="survey-title">Create New Survey</h1>

<form method="post" class="survey-form">
    <div asp-validation-summary="All" class="text-danger text-center"></div>
    <div class="form-group">
        <label asp-for="SurveyForm.Name" class="form-label">Survey Name</label>
        <input asp-for="SurveyForm.Name" class="form-control" maxlength="100"/>
    </div>

    <div class="form-group">
        <label asp-for="OrderNumber" class="form-label">Select Order</label>
        <select class="form-select" asp-for="OrderNumber" id="OrderNumber">
            <option value="" disabled selected>Select an order...</option>
            @foreach (var number in Model.OrderNumbers)
            {
                <option value="@number">@number</option>
            }
        </select>
    </div>

    <h4 class="section-title">Questions</h4>
    <div id="questions-container"></div>

    <button type="button" class="quiz-submit" onclick="addQuestion(JSON.parse(atob(existingQuestions)))">+ Add Question
    </button>
    <br/>
    <button type="submit" class="btn btn-success">Create Survey</button>
</form>

@{
    var serializedData = JsonSerializer.Serialize(Model.ExistingQuestions
        .Where(q => q is not RatingQuestion)
        .Select(q => new { id = q.Id, text = q.QuestionText }));
    
    var encodedData = Convert.ToBase64String(Encoding.UTF8.GetBytes(serializedData));
}

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>

    <script>
        const existingQuestions = '@encodedData';
    </script>
}